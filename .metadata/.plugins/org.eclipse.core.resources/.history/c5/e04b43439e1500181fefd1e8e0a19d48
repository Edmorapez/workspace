package socket;
import java.net.*;
import java.io.*;
public class conex {
	
	private ObjectOutputStream salida; // flujo de salida hacia el cliente
    private ObjectInputStream entrada; // flujo de entrada del cliente
    private ServerSocket servidor; // socket servidor
    private Socket conexion; // conexión al cliente
    private int contador = 1; // contador del número de conexiones
    public void ejecutarServidor(){
    	try {
			servidor = new ServerSocket(12345,100);
			while(true){
				esperarConexion(); // espera una conexión
			    obtenerFlujos(); // obtiene los flujos de entrada y salida
			    procesarConexion(); // procesa la conexión
			}									
		} catch (IOException e) {
		
			e.printStackTrace();
		}
    }
	public void esperarConexion() {
		mostrarMensaje("Esperando conexion");
		try {
			conexion = servidor.accept();// permite al servidor aceptar la conexión
			mostrarMensaje( "Conexion " + contador + " recibida de: " +conexion.getInetAddress().getHostName() );
		} catch (IOException e) {
			
			e.printStackTrace();
		} 
		
	}
	public void obtenerFlujos() throws IOException {
	    	// establece el flujo de salida para los objetos
		  salida = new ObjectOutputStream( conexion.getOutputStream());
		  salida.flush(); // vacía el búfer de salida para enviar información del encabezado		
		  // establece el flujo de entrada para los objetos
		 entrada = new ObjectInputStream( conexion.getInputStream() );		 
		  mostrarMensaje( "\nSe obtuvieron los flujos de E/S\n" );
		
	}
	public void procesarConexion()throws IOException {
		String mensaje = "Conexion exitosa";
		  enviarDatos( mensaje ); // envía mensaje de conexión exitosa
		
		  // habilita campoIntroducir para que el usuario del servidor pueda enviar mensajes
		
		 
		  do // procesa los mensajes enviados desde el cliente
		 {
		  try // lee el mensaje y lo muestra en pantalla
		 {
		  mensaje = ( String ) entrada.readObject(); // lee el nuevo mensaje
		 mostrarMensaje( "\n" + mensaje ); // muestra el mensaje
		 } // fin de try
		 catch ( ClassNotFoundException excepcionClaseNoEncontrada )
		  {
		  mostrarMensaje( "\nSe recibio un tipo de objeto desconocido" );
		  } // fin de catch
		
		  } while ( !mensaje.equals( "CLIENTE>>> TERMINAR" ) );
		
	}
	

	public void enviarDatos(String mensaje) {
	
		try // envía objeto al cliente
		 {
		  salida.writeObject( "SERVIDOR>>> " + mensaje );
		  salida.flush(); // envía toda la salida al cliente
		  mostrarMensaje( "\nSERVIDOR>>> " + mensaje );
		 } 
		 catch ( IOException exepcionES )
		  {
		  System.out.println( "\nError al escribir objeto" );
		  }
		
	}
	public  void mostrarMensaje( String mensajeAMostrar ){
		 System.out.println( mensajeAMostrar );
	}
	
}
